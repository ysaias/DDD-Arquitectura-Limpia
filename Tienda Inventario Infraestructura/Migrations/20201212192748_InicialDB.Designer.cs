// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tienda_Inventario_Infraestructura.Persistence;

namespace TiendaInventario.WebApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201212192748_InicialDB")]
    partial class InicialDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Tienda_Inventario_Domain.Model.Servicio.OrdenVenta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Estado")
                        .HasColumnType("int")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaConsolidacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaDespachado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("ordenVentaId");

                    b.ToTable("OrdenVentas");
                });

            modelBuilder.Entity("Tienda_Inventario_Domain.Model.Servicio.Producto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("productoId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Tienda_Inventario_Domain.Model.Servicio.ProductoPedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cantidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cantidad");

                    b.Property<Guid?>("OrdenVentaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Producto_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("producto_id");

                    b.HasKey("Id");

                    b.HasIndex("OrdenVentaId");

                    b.ToTable("ProductoPedidos");
                });

            modelBuilder.Entity("Tienda_Inventario_Domain.Model.Servicio.OrdenVenta", b =>
                {
                    b.OwnsOne("Tienda_Inventario_SharedKernel.ValueObjects.PersonName.FacturaNameValue", "CodigoFactura", b1 =>
                        {
                            b1.Property<Guid>("OrdenVentaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("codigoFactura");

                            b1.HasKey("OrdenVentaId");

                            b1.ToTable("OrdenVentas");

                            b1.WithOwner()
                                .HasForeignKey("OrdenVentaId");
                        });

                    b.Navigation("CodigoFactura");
                });

            modelBuilder.Entity("Tienda_Inventario_Domain.Model.Servicio.Producto", b =>
                {
                    b.OwnsOne("Tienda_Inventario_SharedKernel.ValueObjects.PersonName.ProductoNameValue", "Nombre", b1 =>
                        {
                            b1.Property<Guid>("ProductoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("nombre");

                            b1.HasKey("ProductoId");

                            b1.ToTable("Productos");

                            b1.WithOwner()
                                .HasForeignKey("ProductoId");
                        });

                    b.OwnsOne("Tienda_Inventario_SharedKernel.ValueObjects.ValorNumber.CantidadNumberValue", "Cantidad", b1 =>
                        {
                            b1.Property<Guid>("ProductoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("cantidad");

                            b1.HasKey("ProductoId");

                            b1.ToTable("Productos");

                            b1.WithOwner()
                                .HasForeignKey("ProductoId");
                        });

                    b.OwnsOne("Tienda_Inventario_SharedKernel.ValueObjects.ValorNumber.PrecioNumberValue", "Precio", b1 =>
                        {
                            b1.Property<Guid>("ProductoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("precio");

                            b1.HasKey("ProductoId");

                            b1.ToTable("Productos");

                            b1.WithOwner()
                                .HasForeignKey("ProductoId");
                        });

                    b.Navigation("Cantidad");

                    b.Navigation("Nombre");

                    b.Navigation("Precio");
                });

            modelBuilder.Entity("Tienda_Inventario_Domain.Model.Servicio.ProductoPedido", b =>
                {
                    b.HasOne("Tienda_Inventario_Domain.Model.Servicio.OrdenVenta", "OrdenVenta")
                        .WithMany()
                        .HasForeignKey("OrdenVentaId");

                    b.Navigation("OrdenVenta");
                });
#pragma warning restore 612, 618
        }
    }
}
